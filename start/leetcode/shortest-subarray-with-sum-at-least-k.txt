import "dart:math";
class Solution {
  int shortestSubarray(List<int> nums, int k) {

      List<int> prefix=[0];
      for (var i=0;i<nums.length;i++){
          if(nums[i]==k){return 1;}
          prefix.add(prefix[prefix.length-1]+nums[i]);
      }
       var minLength=nums.length+1;
       var l=0;
       var monoQ=[];

       for (var j=0;j<prefix.length;j++){
           while(monoQ.length>0 && prefix[monoQ[monoQ.length-1]]>=prefix[j]){
               monoQ.removeLast();
           }
           
           
           while(monoQ.length>0 && prefix[j] - prefix[monoQ[0]] >= k){
               minLength=min(minLength,j-monoQ.removeAt(0)).toInt();
           }
           monoQ.add(j);

       }

       if(minLength==nums.length+1){
           return -1;
       }
       else{
           return minLength;
       }
  }
}